---
name: CI
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    # Run at 06:10 on Sunday
    - cron: "10 6 * * 0"

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
      - name: Run the sh-checker
        uses: luizm/action-sh-checker@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SHELLCHECK_OPTS: --color=always
          SHFMT_OPTS: -s
        with:
          sh_checker_comment: true

  build:
    name: Build
    needs: check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - armhfp
          - arm64
          - amd64
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Build the image with Buildah
        run: |
          sudo podman run \
            --rm \
            --security-opt label=disable \
            --userns keep-id \
            --user build \
            -v ${{ github.workspace }}:/home/build:Z \
            -v /var/lib/containers:/home/build/.local/share/containers \
            quay.io/buildah/stable \
            buildah unshare /home/build/build.sh -a ${{ matrix.arch }}

      - name: Tag the image for Fedora 34
        run: sudo podman tag localhost/picocom localhost/picocom:34

      - name: Export the image
        run: sudo podman image save --format oci-archive -o picocom-${{ matrix.arch }}.tar localhost/picocom

      - uses: actions/upload-artifact@v2
        with:
          name: picocom-${{ matrix.arch }}
          path: picocom-${{ matrix.arch }}.tar

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        arch:
          - armhfp
          - arm64
          - amd64
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - uses: actions/download-artifact@v2
        with:
          name: picocom-${{ matrix.arch }}

      - name: Load the image
        run: podman image load -i picocom-${{ matrix.arch }}.tar

      - name: Create a container and start the OpenSSH server using the image
        run: podman run --rm --name test-container -it localhost/picocom picocom --help

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Create a manifest
        run: buildah manifest create picocom-multiarch:latest

      # armhfp
      - uses: actions/download-artifact@v2
        with:
          name: picocom-armhfp

      - name: Load the armhfp image
        run: podman image load -i picocom-armhfp.tar

      - name: Add the armhfp image to the manifest
        run: buildah manifest add picocom-multiarch:latest localhost/picocom

      # aarch64
      - uses: actions/download-artifact@v2
        with:
          name: picocom-arm64

      - name: Load the arm64 image
        run: podman image load -i picocom-arm64.tar

      - name: Add the arm64 image to the manifest
        run: buildah manifest add picocom-multiarch:latest localhost/picocom

      # x86_64
      - uses: actions/download-artifact@v2
        with:
          name: picocom-amd64

      - name: Load the amd64 image
        run: podman image load -i picocom-amd64.tar

      - name: Add the amd64 image to the manifest
        run: buildah manifest add picocom-multiarch:latest localhost/picocom

      - name: Push latest manifest and images to quay.io
        run: buildah manifest push --rm --all --creds jwillikers+publisher:${{ secrets.REGISTRY_PASSWORD }} picocom-multiarch:latest docker://quay.io/jwillikers/picocom
